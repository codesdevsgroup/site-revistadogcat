// Import CSS variables
@use 'styles/variables';
@use 'styles/mixins' as *;
@use 'styles/buttons';

// Modern CSS Reset
*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

html {
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
}

body {
  font-family: var(--fontFamily);
  font-weight: var(--fontWeight-normal);
  font-size: 0.9rem; /* Reduzido em 10% (era 1rem) */
  line-height: 1.6;
  color: var(--gray-800);
  background: var(--tertiaryColor);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  transition: background-color var(--transition-normal), color var(--transition-normal);
}

// Typography improvements
h1, h2, h3, h4, h5, h6 {
  font-family: var(--fontFamilyHeading);
  font-weight: var(--fontWeight-bold);
  line-height: 1.2;
  color: var(--gray-900);
  margin-bottom: var(--space-4);
}

h1 { font-size: 2.25rem; }
h2 { font-size: 1.8rem; }
h3 { font-size: 1.575rem; }
h4 { font-size: 1.35rem; }
h5 { font-size: 1.125rem; }
h6 { font-size: 1.0125rem; }

p {
  margin-bottom: var(--space-4);
  .bg-primary &,
  .bg-green &,
  [style*="background"][style*="green"] &,
  [style*="background"][style*="primaryColor"] &,
  [style*="linear-gradient"]
  .bg-light &,
  .bg-white & {
    color: var(--gray-800);
  }
}

// Global text color fixes for dark backgrounds
[style*="background: linear-gradient"],
[style*="background: var(--primaryColor)"],
[style*="background: var(--primaryColorDark)"],
[style*="background: var(--primaryColorLight)"] 

// Specific component fixes
.hero-section,
.cta-section,
.footer-section,
.modal-header,
.card-header {
  p, span, div:not(.btn):not(.form-control) {
    color: var(--white) !important;
  }
}




a {
  color: var(--primaryColor);
  text-decoration: none;
  transition: var(--transition-fast);
  
  &:hover {
    color: var(--primaryColorLight);
    text-decoration: underline;
  }
}

// Focus styles
:focus-visible {
  outline: 2px solid var(--primaryColor);
  outline-offset: 2px;
}

// Animações otimizadas
@keyframes fadeInUp { from { opacity: 0; transform: translateY(30px); } to { opacity: 1; transform: translateY(0); } }
@keyframes fadeInDown { from { opacity: 0; transform: translateY(-30px); } to { opacity: 1; transform: translateY(0); } }
@keyframes fadeInLeft { from { opacity: 0; transform: translateX(-30px); } to { opacity: 1; transform: translateX(0); } }
@keyframes fadeInRight { from { opacity: 0; transform: translateX(30px); } to { opacity: 1; transform: translateX(0); } }
@keyframes scaleIn { from { opacity: 0; transform: scale(0.8); } to { opacity: 1; transform: scale(1); } }
@keyframes pulse { 0%, 100% { transform: scale(1); } 50% { transform: scale(1.05); } }
@keyframes shimmer { 0% { background-position: -200px 0; } 100% { background-position: calc(200px + 100%) 0; } }
@keyframes bounce { 0%, 20%, 53%, 80%, 100% { transform: translate3d(0, 0, 0); } 40%, 43% { transform: translate3d(0, -8px, 0); } 70% { transform: translate3d(0, -4px, 0); } 90% { transform: translate3d(0, -2px, 0); } }
@keyframes slideInUp { from { transform: translateY(100%); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

.animate-fade-in-up { animation: fadeInUp 0.6s ease-out forwards; }
.animate-fade-in-down { animation: fadeInDown 0.6s ease-out forwards; }
.animate-fade-in-left { animation: fadeInLeft 0.6s ease-out forwards; }
.animate-fade-in-right { animation: fadeInRight 0.6s ease-out forwards; }
.animate-scale-in { animation: scaleIn 0.4s ease-out forwards; }
.animate-pulse { animation: pulse 2s infinite; }
.animate-bounce { animation: bounce 1s infinite; }
.animate-slide-in-up { animation: slideInUp 0.5s ease-out forwards; }

.hover-lift { transition: var(--transition-normal); &:hover { transform: translateY(-4px); box-shadow: var(--shadow-xl); } }
.hover-scale { transition: var(--transition-normal); &:hover { transform: scale(1.05); } }
.hover-glow { transition: var(--transition-normal); &:hover { box-shadow: 0 0 20px rgba(var(--primaryColor), 0.3); } }
  
.hover-shimmer { position: relative; overflow: hidden; &::before { content: ''; position: absolute; top: 0; left: -200px; width: 200px; height: 100%; background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent); transition: var(--transition-normal); } &:hover::before { animation: shimmer 0.6s ease-out; } }

.text-shadow { text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); }
.backdrop-blur { backdrop-filter: blur(10px); }

.container-custom {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 var(--space-4);
}

.grid-auto-fit {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--space-6);
}

// Custom flex utilities (complementing Bootstrap)
.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Custom spacing utilities (complementing Bootstrap)
.space-y > * + * { margin-top: var(--space-4); }
.space-x > * + * { margin-left: var(--space-4); }

// Animações adicionais
@keyframes fadeIn { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
@keyframes slideInLeft { from { opacity: 0; transform: translateX(-30px); } to { opacity: 1; transform: translateX(0); } }
@keyframes slideInRight { from { opacity: 0; transform: translateX(30px); } to { opacity: 1; transform: translateX(0); } }

// Utilitários de animação
.animate-fade-in { animation: fadeIn 0.6s ease-out; }
.animate-slide-in-left { animation: slideInLeft 0.6s ease-out; }
.animate-slide-in-right { animation: slideInRight 0.6s ease-out; }

// Loading e utilitários
.loading-shimmer { background: linear-gradient(90deg, var(--gray-200) 25%, var(--gray-100) 50%, var(--gray-200) 75%); background-size: 200px 100%; animation: shimmer 1.5s infinite; }
.loading-spinner { width: 40px; height: 40px; border: 4px solid var(--gray-200); border-top: 4px solid var(--primaryColor); border-radius: 50%; animation: spin 1s linear infinite; }